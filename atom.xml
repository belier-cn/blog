<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.belier.cn</id>
    <title>Blog</title>
    <updated>2019-09-08T14:00:15.233Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.belier.cn"/>
    <link rel="self" href="https://blog.belier.cn/atom.xml"/>
    <logo>https://blog.belier.cn/images/avatar.png</logo>
    <icon>https://blog.belier.cn/favicon.ico</icon>
    <rights>All rights reserved 2019, Blog</rights>
    <entry>
        <title type="html"><![CDATA[使用 acme.sh 和 Dokcer 快速生成通配符 ssl 证书]]></title>
        <id>https://blog.belier.cn/post/jvcfkOdjf</id>
        <link href="https://blog.belier.cn/post/jvcfkOdjf">
        </link>
        <updated>2019-09-08T12:30:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id="acmesh-简介">acme.sh 简介</h2>
<p><a href="https://github.com/Neilpang/acme.sh">acme.sh</a> 实现了 acme 协议, 可以从 letsencrypt 生成免费的证书.</p>
<h2 id="安装-docker">安装 Docker</h2>
<p>参考我的文章：<a href="https://blog.belier.cn/post/-ZFHJzYym/">Centos7 安装 Docker</a></p>
<h2 id="阿里云自动验证-dns-生成">阿里云自动验证 DNS 生成</h2>
<ol>
<li>
<p>准备一个子账号，用于访问阿里云 DNS 服务<br>
<a href="https://ram.console.aliyun.com/users/new">去添加</a><br>
<img src="https://image.belier.cn/images/20190908204951.png" alt=""></p>
</li>
<li>
<p>获取 AccessKey ID 和 AccessKeySecret<br>
<img src="https://image.belier.cn/images/20190908205802.png" alt=""></p>
</li>
<li>
<p>设置 DNS 管理权限<br>
<a href="https://ram.console.aliyun.com/permissions">去授权</a><br>
<img src="https://image.belier.cn/images/20190908205014.png" alt=""></p>
</li>
<li>
<p>创建 acme.sh 容器</p>
</li>
</ol>
<pre><code class="language-sh">docker run -itd --name acme.sh \
-e Ali_Key=&quot;your key&quot;\
-e Ali_Secret=&quot;your secret&quot; \
-v /usr/local/ssl/acme.sh:/acme.sh \
neilpang/acme.sh daemon
</code></pre>
<ol start="5">
<li>生成 ssl 证书</li>
</ol>
<pre><code class="language-sh">docker exec -it acme.sh --issue --dns dns_ali -d yourdomain.com -d *.yourdomain.com
</code></pre>
<blockquote>
<p>证书文件在 /usr/local/ssl/acme.sh 中</p>
</blockquote>
<h2 id="cloudflare-自动验证-dns-生成">Cloudflare 自动验证 DNS 生成</h2>
<ol>
<li>
<p>绑定域名</p>
</li>
<li>
<p>获取 Api Token 和 Account ID</p>
<p>Account ID ，在域名的主页（有折线图的页面），往下找</p>
</li>
</ol>
<p><img src="https://image.belier.cn/images/20190908212220.png" alt=""></p>
<blockquote>
<p>这个我找了好久</p>
</blockquote>
<p>Api Token</p>
<p>创建<br>
<img src="https://image.belier.cn/images/20190908213353.png" alt=""></p>
<p>创建完成的页面获取<br>
<img src="https://image.belier.cn/images/20190908213336.png" alt=""></p>
<ol start="3">
<li>创建 acme.sh 容器</li>
</ol>
<pre><code class="language-sh">docker run -itd --name acme.sh \
-e CF_Token=&quot;your token&quot;\
-e CF_Account_ID=&quot;your account id&quot; \
-v /usr/local/ssl/acme.sh:/acme.sh \
neilpang/acme.sh daemon
</code></pre>
<ol start="4">
<li>生成 ssl 证书</li>
</ol>
<pre><code class="language-sh">docker exec -it acme.sh --issue --dns dns_cf  -d yourdomain.com -d *.yourdomain.com
</code></pre>
<h2 id="nginx-使用">Nginx 使用</h2>
<pre><code>server {
  listen 443 ssl;
  server_name  yourdomain.com;
	ssl on;
	
  ssl_certificate /usr/local/ssl/acme.sh/belier.ml/fullchain.cer;
  ssl_certificate_key /usr/local/ssl/acme.sh/belier.ml/belier.ml.key;
	ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers           HIGH:!aNULL:!MD5;
  ssl_session_timeout 5m;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos7 安装 Docker]]></title>
        <id>https://blog.belier.cn/post/-ZFHJzYym</id>
        <link href="https://blog.belier.cn/post/-ZFHJzYym">
        </link>
        <updated>2019-09-08T10:29:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一键安装脚本">一键安装脚本</h2>
<pre><code class="language-sh">curl -sSL https://get.docker.com/ | sh
</code></pre>
<blockquote>
<p>推荐国外服务器使用，国内使用手动安装</p>
</blockquote>
<h2 id="手动安装">手动安装</h2>
<h3 id="安装准备">安装准备</h3>
<ol>
<li>查看 CentOS 系统的内核版本是否高于 3.10</li>
</ol>
<pre><code class="language-sh">uname -r 
</code></pre>
<ol start="2">
<li>移除旧的版本</li>
</ol>
<pre><code class="language-sh">sudo yum remove docker \
                docker-client \
                docker-client-latest \
                docker-common \
                docker-latest \
                docker-latest-logrotate \
                docker-logrotate \
                docker-selinux \
                docker-engine-selinux \
                docker-engine
</code></pre>
<ol start="3">
<li>安装所需的软件包</li>
</ol>
<pre><code class="language-sh">sudo yum install -y yum-utils device-mapper-persistent-data lvm2
</code></pre>
<ol start="4">
<li>添加源</li>
</ol>
<pre><code class="language-sh">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre>
<ol start="5">
<li>更新 yum 缓存</li>
</ol>
<pre><code>sudo yum makecache fast
</code></pre>
<h3 id="安装-docker">安装 Docker</h3>
<pre><code>sudo yum -y install docker-ce
</code></pre>
<p>安装成功后查看版本，检查是否安装成功</p>
<pre><code>docker -v
</code></pre>
<h3 id="启动-docker-服务">启动 Docker 服务</h3>
<pre><code>systemctl start docker
</code></pre>
<h3 id="docker-服务命令">Docker 服务命令</h3>
<pre><code>systemctl start docker     # 启动服务
systemctl stop docker      # 关闭服务
systemctl restart docker   # 重启服务
systemctl enable docker    # 开机自启动
systemctl disable docker   # 关闭开机自启动
</code></pre>
<h3 id="配置阿里镜像加速器">配置阿里镜像加速器</h3>
<ol>
<li>开通服务</li>
</ol>
<p>地址：<a href="https://cr.console.aliyun.com/cn-shanghai/instances/mirrors">镜像加速器</a></p>
<ol start="2">
<li>配置加速器</li>
</ol>
<pre><code>sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'
{
  &quot;registry-mirrors&quot;: [&quot;你的地址&quot;]
}
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 VirtualBox Vagrant 快速搭建 Centos7 系统]]></title>
        <id>https://blog.belier.cn/post/i_KOzuNX8</id>
        <link href="https://blog.belier.cn/post/i_KOzuNX8">
        </link>
        <updated>2019-09-08T10:16:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="准备工具">准备工具</h3>
<h4 id="virtualbox">VirtualBox</h4>
<p>下载地址：<a href="https://www.virtualbox.org/wiki/Downloads">Downloads – Oracle VM VirtualBox</a></p>
<h4 id="vagrant">Vagrant</h4>
<p>下载地址：<a href="https://www.vagrantup.com/downloads.html">Download - Vagrant by HashiCorp</a></p>
<h3 id="使用-vagrant-安装-centos7">使用 Vagrant 安装 Centos7</h3>
<ol>
<li>
<p>创建一个目录，例如：D:/vagrant/centos7</p>
</li>
<li>
<p>在该目录下创建 Vagrantfile 文件</p>
</li>
</ol>
<pre><code class="language-ruby"># -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version &quot;&gt;= 1.6.0&quot;

# 定义常量
box = {
        :name =&gt; &quot;docker-host&quot;,
        :eth1 =&gt; &quot;192.168.56.10&quot;,
        :mem =&gt; &quot;1024&quot;,
        :cpu =&gt; &quot;1&quot;
      }

Vagrant.configure(2) do |config|

  # 要使用的 box
  config.vm.box = &quot;centos/7&quot;
  config.vm.hostname = box[:name]
  # 网络配置
  config.vm.network :private_network, ip: box[:eth1]
  # virtualbox 配置
  config.vm.provider &quot;virtualbox&quot; do |v|
    # virtualbox 显示的名称
    v.name = box[:name]
    # 配置内存
    v.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, box[:mem]]
    # 配置 CPU
    v.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, box[:cpu]]
  end
end
</code></pre>
<p>关于 Vagrantfile 的详细文档：<a href="https://www.vagrantup.com/docs/vagrantfile/">Vagrantfile - Vagrant by HashiCorp</a></p>
<ol start="3">
<li>创建虚拟机，执行如下命令</li>
</ol>
<pre><code>vagrant up
</code></pre>
<p>如果当前环境下没有 centos/7 这个box 会从网络下载，但是国内太慢，我们在执行 vagrant up 的时候会看见一个地址，我们可以用下载软件，如迅雷... 去下载，然后配置到 vagrant 的环境中</p>
<ol start="4">
<li>配置 box centos/7 (如果速度不慢，忽略这步)</li>
</ol>
<p>将下载好的 box 文件放到 D:/vagrant/box 目录下</p>
<p>添加本地 box</p>
<pre><code class="language-ruby">vagrant box add centos/7 file:///D:/vagrant/box/centos-7.box
</code></pre>
<p>检查是否添加成功</p>
<pre><code class="language-ruby">vagrant box list
</code></pre>
<p>成功后先删除 VirtualBox 中生成的虚拟机和当前目录下的 .vagrant 文件夹，再次执行</p>
<pre><code class="language-ruby">vagrant up
</code></pre>
<h3 id="使用三方-ssh-工具连接-centos-系统">使用三方 ssh 工具连接 centos 系统</h3>
<p>ip : Vagrantfile 文件中配置的 ip<br>
port : 22<br>
username : vagrant<br>
private key : .vagrant\machines\default\virtualbox\private_key</p>
<blockquote>
<p>root 用户密码：vagrant</p>
</blockquote>
<h3 id="vagrant-网络">Vagrant 网络</h3>
<h4 id="官方文档">官方文档</h4>
<p><a href="https://www.vagrantup.com/docs/networking/">Networking - Vagrant by HashiCorp</a></p>
<h3 id="vagrant-常用命令">Vagrant 常用命令</h3>
<pre><code>vagrant init        # 初始化
vagrant up          # 启动虚拟机
vagrant halt        # 关闭虚拟机
vagrant reload      # 重启虚拟机
vagrant ssh         # SSH 至虚拟机
vagrant status      # 查看虚拟机运行状态
vagrant destroy     # 销毁当前虚拟机
vagrant ssh-config  # 输出ssh连接的一些信息
vagrant version     # 获取vagrant的版本

vagrant box list    # 列出所有box列表
vagrant box remove {base name}  # 删除
</code></pre>
<p>更多命令：<a href="https://www.vagrantup.com/docs/cli/">Command-Line Interface - Vagrant by HashiCorp</a></p>
]]></content>
    </entry>
</feed>